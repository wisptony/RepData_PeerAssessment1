options(useFancyQuotes = F)
getwd()
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
table(activity$steps)
sum(is.na(activity$steps))
head(activity,1)
activity_1 <- activity[!is.na(activity),]
activity_1 <- activity[!is.na(activity),]
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
head(activity_1)
17568-2304
dim(activity_1)
head(activity, 1)
activity_1 <- activity[!is.na(activity$steps),]
sum(activity_1$steps)
library(dplyr)
date <- list(activity_1$date)
head(date)
?list
activity$date <- as.factor(activity$date)
summary(activity$date)
head(activity$date)
head(as.list(activity$date))
head(list(activity$date))
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity_1 <- activity[!is.na(activity$steps),]
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date))
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum())
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1$steps, by = list(activity_1$date), FUN = sum)
head(aggregate_steps)
length(unique(activity_1$date))
hist(aggregate_steps)
hist(aggregate_steps$x)
hist(x = aggregate_steps$x)
hist(aggregate_steps$x)
hist(aggregate_steps$Group.1)
?hist
barplot(height = aggregate_steps$x)
histogram(aggregate_steps$x)
hist(aggregate_steps$x)
title(main = "Histogram of Steps Taken Each Day", xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(aggregate_steps$x, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x)c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x)c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean = mean(x),
median = median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date), FUN = function(x) c(mean = mean(x),
median = median(x)))
median(aggregate_steps$x)
aggregate_steps
data.frame(mean=mean(aggregate_steps$x), median=median(aggregate_steps$x))
head(activity)
unique(activity$interval)
24*12
5*12*24
average_steps <- aggregate(x = activity_1$steps, by = list(activity_1$interval), FUN = mean)
head(average_steps)
dim(average_steps)
24*12
plot(average_steps$Group.1, average_steps$x)
plot(average_steps$Group.1, average_steps$x, type = "l")
plot(average_steps$Group.1, average_steps$x, type = "l", xlab="5 minutes interval",
ylab = "average steps taken across all days")
average_steps$Group.1[which.max(average_steps$x)]
288*5
tail(average_steps)
12*24
24*12*5
24*60
plot(y = average_steps$Group.1)
plot(x = 1:288, y = average_steps$Group.1)
head(average_steps)
head(average_steps$Group.1/5)
average_steps$Group.1/5
average_steps$Group.1/5-1:288
average_steps$Group.1/5-0:288
average_steps$Group.1/5-0:287
average_steps$Group.1/5
source('~/GitHub/RepData_PeerAssessment1/Project1.R', echo=TRUE)
sum(is.na(activity))
sum(is.na(activity))
sum(is.na(activity$steps))
aggregate_steps
head(activity)
which(is.na(activity$steps))
length(which(is.na(activity$steps)))
head(activity$steps)
head(activity)
class(activity$date)
head(average_steps)
class(activity$interval)
grep(pattern = activity$interval[1], average_steps$Group.1)
head(aggregate_steps)
head(aggregate_steps)
aggregate <- data.frame(mean=mean(aggregate_steps$x), median=median(aggregate_steps$x))
head(aggregate)
head(activity)
head(average_steps)
head(aggregate_steps)
index <- which(is.na(activity$steps))
for(i in index){
activity$steps[index] <-
aggregate$mean[grep(pattern = activity$date[i], aggregate_steps$Group.1)]
}
for(i in index){
activity$steps[index] <-
aggregate$mean[grep(pattern = activity$date[i], aggregate_steps$Group.1)]
}
grep(pattern=activity$date[1], aggregate_steps$Group.1)
activity$date[1]
head(aggregate_steps)
class(aggregate_steps$Group.1)
grep(pattern=activity$date[1], x = aggregate_steps$Group.1)
grep(pattern=activity$date[2000], x = aggregate_steps$Group.1)
?mapply
head(average_steps)
aggregate_steps <- aggregate(x = activity_1$steps, by = list(activity_1$date), FUN = sum)
aggregate <- data.frame(mean=mean(aggregate_steps$x), median=median(aggregate_steps$x))
average_steps$Group.1[which.max(average_steps$x)]
aggregate
hist(aggregate_steps$x, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
aggregate_steps <- aggregate(steps~date, data=activity_1, FUN = sum)
head(aggregate_steps)
hist(aggregate_steps$x, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(aggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
aggregate <- data.frame(mean=mean(aggregate_steps$x), median=median(aggregate_steps$x))
aggregate_steps <- aggregate(steps~date, data=activity_1, FUN = sum)
head(aggregate_steps)
aggregate <- data.frame(mean=mean(aggregate_steps$steps), median=median(aggregate_steps$steps))
aggregate
average_steps <- aggregate(x = activity_1$steps, by = list(activity_1$interval), FUN = mean)
head(average_steps)
average_steps <- aggregate(steps~interval, data=activity_1, FUN = mean)
plot(average_steps$interval, average_steps$steps, type = "l", xlab="5 minutes interval",
ylab = "average steps taken across all days")
average_steps$[which.max(average_steps$x),]
average_steps$[which.max(average_steps$steps),]
average_steps[which.max(average_steps$steps),]
sum(is.na(activity))
index <- which(is.na(activity))
average_steps$steps[which(activity$interval[1]==average_steps$interval)]
head(average$steps)
head(average_steps)
index <- which(is.na(activity))
for(i in index){
activity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
}
head(activity$steps)
aggregate
newactivity<-activity
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
head(activity)
head(newactivity)
head(aggregate_steps)
newaggregate_steps <- aggregate(steps~date, data =  newactivity, FUN = sum)
head(newaggregate_steps)
hist(newaggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
head(newaggregate_steps)
hist(newaggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(aggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(newaggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
head(newactivity)
aggregate_steps <- aggregate(steps~date, data=activity_1, FUN = sum)
hist(aggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
summary(newactivity)
index <- which(is.na(activity))
class(index)
index <- which(is.na(activity))
fillin <- function(index){
for(i in index){
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
}
}
fillin(index)
summary(newactivity$steps)
index <- which(is.na(activity))
class(index)
newactivity<-activity
activity$steps <- average_steps$steps[which(activity$interval[1]==average_steps$interval)]
newactivity$steps <- average_steps$steps[which(activity$interval[1]==average_steps$interval)]
summary(activity)
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity_1 <- activity[!is.na(activity$steps),]
newactivity<-activity
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
summary(activity)
summary(newactivity)
class(which(is.na(activity)))
class(1;2304)
class(1:2304)
1:2
for (i in 1:2304))){
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
}
for (i in 1:2304){
newactivity$steps <- average_steps$steps[which(activity$interval[i]==average_steps$interval)]
}
summary(newactivity)
average_steps <- aggregate(steps~interval, data=activity_1, FUN = mean)
head(average_steps)
for(i in 1:17568){
if(is.na(newactivity$steps[i])){
newactivity$steps[i] <- average_steps$steps[newactivity$interval[i]==average_steps$interval]
}
}
summary(newactivity)
newactivity$steps[i] <- average_steps$steps[where(newactivity$interval[i]==average_steps$interval)]
newactivity$steps[i] <- average_steps$steps[which(newactivity$interval[i]==average_steps$interval)]
newactivity <- activity
newactivity$steps[i] <- average_steps$steps[which(newactivity$interval[i]==average_steps$interval)]
summary(newactivity)
for(i in 1:17568){
if(is.na(newactivity$steps[i])){
newactivity$steps[i] <- average_steps$steps[which(newactivity$interval[i]==average_steps$interval)]
}
}
summary(newactivity)
newaggregate_steps <- aggregate(steps~date, data =  newactivity, FUN = sum)
head(newaggregate_steps)
hist(newaggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(aggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
summary(aggregate_steps)
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity_1 <- activity[!is.na(activity$steps),]
steps_by_date <- aggregate(steps~date, data=activity_1, FUN = sum)
hist(asteps_by_date$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
aggregate <- data.frame(mean=mean(aggregate_steps$steps), median=median(aggregate_steps$steps))
aggregate
steps_by_interval <- aggregate(steps~interval, data=activity_1, FUN = mean)
plot(steps_by_interval$interval, average_steps$steps, type = "l", xlab="5 minutes interval",
ylab = "average steps taken across all days")
average_steps[which.max(average_steps$steps),]
sum(is.na(activity))
newactivity <- activity
for(i in 1:17568){
if(is.na(newactivity$steps[i])){
newactivity$steps[i] <- average_steps$steps[which(newactivity$interval[i]==average_steps$interval)]
}
}
hist(newaggregate_steps$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
newstep_by_date <- aggregate(steps~date, data =  newactivity, FUN = sum)
hist(newstep_by_date$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T)
hist(newstep_by_date$steps, col="red", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, col="blue", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T)
hist(newstep_by_date$steps, col="red", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, col="blue", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T, ylim=(0,35))
hist(steps_by_date$steps, col="blue", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T, ylim=c(0,35))
hist(newstep_by_date$steps, col="red", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, col="blue", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T, ylim=c(0,35))
newstep_by_date <- aggregate(steps~date, data =  newactivity, FUN = sum)
hist(newstep_by_date$steps, col="red", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, col="blue", main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T, ylim=c(0,35))
newstep_by_date <- aggregate(steps~date, data =  newactivity, FUN = sum)
hist(newstep_by_date$steps, col=rgb(0,0,1,1/4), main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(steps_by_date$steps, col=rgb(1,0,0,1/4), main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency", add=T, ylim=c(0,35))
summary(newactivity)
newactivity$date[1]
weekdays(newactivity$date[1])
weekdays(as.date(newactivity$date))
weekdays(as.Date(newactivity$date[1]))
?weekdays
weekdays(as.Date(newactivity$date[1]))
weekdays1 <- c("MOnday", "Tuesday", "Wednesday", "Thursday", "Friday")
newactivity$weekdays <- factor(weekdays(as.Date(newactivity$date))%in%weekdays1,
levels = c(FALSE, TRUE), labels =
c("weekend","weekday"))
summary(newactivity$weeekdays)
head(newactivity)
summary(newactivity$weekdays)
newactivity_interval <- aggregate(steps~interval+weekdays, data=newactivity, FUN =                         mean)
head(newactivity_interval)
library(ggplot2)
?qplot
qplot(x = interval, y = steps, data = newactivity_interval, facets = weekdays~.)
qplot(x = interval, y = steps, data = newactivity_interval, facets = weekdays~., geom=c("line"))
qplot(x = interval, y = steps, data = newactivity_interval, facets = weekdays~., geom=c("line"), colour="blue")
qplot(x = interval, y = steps, data = newactivity_interval, facets = weekdays~., geom=c("line"))
