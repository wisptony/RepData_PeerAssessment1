options(useFancyQuotes = F)
getwd()
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
table(activity$steps)
sum(is.na(activity$steps))
head(activity,1)
activity_1 <- activity[!is.na(activity),]
activity_1 <- activity[!is.na(activity),]
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
head(activity_1)
17568-2304
dim(activity_1)
head(activity, 1)
activity_1 <- activity[!is.na(activity$steps),]
sum(activity_1$steps)
library(dplyr)
date <- list(activity_1$date)
head(date)
?list
activity$date <- as.factor(activity$date)
summary(activity$date)
head(activity$date)
head(as.list(activity$date))
head(list(activity$date))
activity <- read.csv(file = "activity.csv", header = T, stringsAsFactors = F)
activity_1 <- activity[!is.na(activity$steps),]
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date))
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum())
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1, by = list(activity_1$date), FUN = sum)
aggregate_steps <- aggregate(x = activity_1$steps, by = list(activity_1$date), FUN = sum)
head(aggregate_steps)
length(unique(activity_1$date))
hist(aggregate_steps)
hist(aggregate_steps$x)
hist(x = aggregate_steps$x)
hist(aggregate_steps$x)
hist(aggregate_steps$Group.1)
?hist
barplot(height = aggregate_steps$x)
histogram(aggregate_steps$x)
hist(aggregate_steps$x)
title(main = "Histogram of Steps Taken Each Day", xlab = "Steps Taken Per Day", ylab=" Frequency")
hist(aggregate_steps$x, main = "Histogram of Steps Taken Each Day",
xlab = "Steps Taken Per Day", ylab=" Frequency")
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x)c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x)c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean=mean(x),
median=median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date, FUN = function(x) c(mean = mean(x),
median = median(x))))
aggregate(x = activity_1$steps, by = list(activity_1$date), FUN = function(x) c(mean = mean(x),
median = median(x)))
median(aggregate_steps$x)
aggregate_steps
data.frame(mean=mean(aggregate_steps$x), median=median(aggregate_steps$x))
head(activity)
unique(activity$interval)
24*12
5*12*24
average_steps <- aggregate(x = activity_1$steps, by = list(activity_1$interval), FUN = mean)
head(average_steps)
dim(average_steps)
24*12
plot(average_steps$Group.1, average_steps$x)
plot(average_steps$Group.1, average_steps$x, type = "l")
plot(average_steps$Group.1, average_steps$x, type = "l", xlab="5 minutes interval",
ylab = "average steps taken across all days")
average_steps$Group.1[which.max(average_steps$x)]
288*5
tail(average_steps)
12*24
24*12*5
24*60
plot(y = average_steps$Group.1)
plot(x = 1:288, y = average_steps$Group.1)
head(average_steps)
head(average_steps$Group.1/5)
average_steps$Group.1/5
average_steps$Group.1/5-1:288
average_steps$Group.1/5-0:288
average_steps$Group.1/5-0:287
average_steps$Group.1/5
